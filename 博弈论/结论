sgu=mex{sgv} v是u的所有后继
先手必胜当且仅当sg函数不为0
游戏的和:G=G1+G2+G3....Gn每次选择一个Gi移动一步
SG(G)=SG(G1)^SG(G2)^SG(G3)....^SG(Gn) (SG定理)
nim游戏在一堆石子中sg值就是石子的个数

练习一:有一堆石头,两个人轮流取,每次可以取1——k个
谁不能取就算输,问谁会获胜。
sg[i]=mex{sg[i-j]}(j=1——k) sg[i]=i%(b+1)

练习二: 有n个石子,两个人轮流操作,可以拿走一些石头
也可以将一堆石头分成两堆
    for(int i=1;i<=n;++i){
        set<int> s;
        for(int j=0;j<i;++j) s.insert(sg[j]);
        for(int j=1;j<i;++j) s.insert(sg[j]^sg[i-j]);
        while(s.count(sg[i])) sg[i]++;
    }

练习三:1*n的长条,每个人轮流拿走两个连续的点,问最后谁赢
    for(int i=1;i<=n;++i){
        set<int> s;
        for(int j=0;j<=i-2;++j) s.insert(sg[j]^sg[i-j-2]);
        while(s.count(sg[i])) sg[i]++;
    }

练习四:1*n的长条,每个人轮流在格子里画叉,谁画了连续的三个叉就算赢
    for(int i=1;i<=n;++i){
        set<int> s;
        for(int j=0;j<=i-5;++j) s.insert(sg[j]^sg[i-j-5]);
        if(i>=3) s.insert(sg[i-3]);
        if(i>=4) s.insert(sg[i-4]);
        while(s.count(sg[i])) sg[i]++;
    }

阶梯nim:有n堆石头。两个人轮流取,每次可以选取若干石头放到i-1堆里面。
谁不能取就算输
变种:移棋子问题(把空格当作棋子)
结论:只和偶数堆有关,等于偶数堆石子的异或和

翻硬币问题
n枚硬币排成一排,有的正面朝上,有的反面朝上。我们从左开始对硬币按1——n编号。
两个人轮流根据某些约束翻硬币(如:每次只能翻一或二枚,或者每次只能翻连续的几枚),但他
们翻动的硬币中,最右边的必须是从正面翻到反面。
谁不能翻谁输
结论:sg=每个硬币单独的sg值异或起来 sg[i]=mex(0,sg[j]) (1=<j<i)

d阶nim N阶Nim游戏
N 阶 Nim 游戏：有 k 堆石子,各包含X1,X2... Xk 颗石子。
双方玩家轮流操作，每次操作选择其中非空的若干堆，至少堆但不超过 N 堆，
在这若干堆中的每雄各取走其中的若干颗石子（ T 颗,2颗..．甚全整堆），‘
数目可以不同，取走最后一颗石子的玩家获胜。
结论：当且仅当在每一个不同的二进制位上,X1,X2... Xk 中在该位上1的个数
是 N +1的倍数时,后手方有必胜策略,否则先手必胜。

Anti - SG
对于任意一个 Anti - SG 游戏，如果我们规定当局面中所有的单一游戏的 SG 值为0时,
游戏结束(操作的人失败)，则先手必胜当且仅当：
(1)游戏的 SG 函数不为0且游戏中某个单一游戏的 SG 函数大于1。
(2)游戏的 SG 函数为0且游戏中没有单一游戏的 SG 函数大于1。