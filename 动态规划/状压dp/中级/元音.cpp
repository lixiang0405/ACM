/*
Iahubina 厌倦了这么多复杂的语言，所以她决定发明一种新的、简单的语言。
她已经制作了一本由 n 个 3 个单词组成的字典。
3 个单词是英文字母表（a 到 x）的前 24 个字母中正好 3 个小写字母的序列。
她决定有些字母是元音，而其他的都是辅音。
整个语言基于一个简单的规则：任何包含至少一个元音的单词都是正确的。
Iahubina 忘记了哪些字母是元音，并想找到一些可能的正确元音组。
她问 Iahub 问题。
在每个问题中，她都会给 Iahub 一组被认为是元音的字母（在这个问题中）。
对于每个问题，考虑到给定的元音集，她想知道字典中有多少单词是正确的。
Iahubina 想知道所有可能问题的平方答案的异或。
有 2^24 个不同的问题，它们都是英文字母表的前 24 个字母的集合的子集。
帮助 Iahub 找到那个号码。
*/
int n;
ll a[N+10],f[N+10];
char s[10];

int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
	scanf("%d",&n);
    for(int i=1;i<=n;++i){
        scanf("%s",s);
        int x=0;
        for(int j=0;j<3;++j){
            x|=1<<(s[j]-'a');
        }
        a[x]++;
        f[i]=x;
    }
    for(int i=0;i<24;++i){
        for(int j=0;j<(1<<24);++j){
            if(j&(1<<i)) a[j]+=a[j-(1<<i)];
        }
    }
    ll ans=0;
    for(int i=0;i<(1<<24);++i) ans^=(n-a[(1<<24)-i-1])*(n-a[(1<<24)-i-1]);
    printf("%lld",ans);
    return 0;
}